# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import platform
import pyperclip
from distutils.log import info
from PyQt5 import QtCore, QtGui, QtWidgets
import os
from PyQt5.QtCore import *
from PyQt5.QtGui import *

txt = ""
pyperclip.init_osx_pbcopy_clipboard()

save_right = False
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(854, 518)
        MainWindow.setMinimumSize(QtCore.QSize(854, 518))
        MainWindow.setMaximumSize(QtCore.QSize(854, 518))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(0, 0, 851, 291))
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tellist = QtWidgets.QListWidget(self.groupBox)
        self.tellist.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.tellist.setObjectName("tellist")
        self.horizontalLayout.addWidget(self.tellist)
        self.infolist = QtWidgets.QListWidget(self.groupBox)
        self.infolist.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.infolist.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.infolist.setObjectName("infolist")
        self.horizontalLayout.addWidget(self.infolist)
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(10, 290, 166, 101))
        self.groupBox_2.setObjectName("groupBox_2")
        self.findname = QtWidgets.QLineEdit(self.groupBox_2)
        self.findname.setGeometry(QtCore.QRect(12, 32, 142, 25))
        self.findname.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.findname.setObjectName("findname")
        self.findbtn = QtWidgets.QPushButton(self.groupBox_2)
        self.findbtn.setGeometry(QtCore.QRect(40, 66, 89, 25))
        self.findbtn.setObjectName("findbtn")
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(190, 300, 631, 131))
        self.groupBox_3.setStatusTip("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.name = QtWidgets.QLineEdit(self.groupBox_3)
        self.name.setGeometry(QtCore.QRect(10, 30, 142, 25))
        self.name.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.name.setObjectName("name")
        self.lastname = QtWidgets.QLineEdit(self.groupBox_3)
        self.lastname.setGeometry(QtCore.QRect(10, 60, 142, 25))
        self.lastname.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lastname.setObjectName("lastname")
        self.namemos = QtWidgets.QLineEdit(self.groupBox_3)
        self.namemos.setGeometry(QtCore.QRect(160, 30, 142, 25))
        self.namemos.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.namemos.setObjectName("namemos")
        self.telname = QtWidgets.QLineEdit(self.groupBox_3)
        self.telname.setGeometry(QtCore.QRect(160, 60, 142, 25))
        self.telname.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.telname.setObjectName("telname")
        self.mob2 = QtWidgets.QLineEdit(self.groupBox_3)
        self.mob2.setGeometry(QtCore.QRect(310, 30, 142, 25))
        self.mob2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.mob2.setObjectName("mob2")
        self.mob2_2 = QtWidgets.QLineEdit(self.groupBox_3)
        self.mob2_2.setGeometry(QtCore.QRect(310, 60, 142, 25))
        self.mob2_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.mob2_2.setObjectName("mob2_2")
        self.email = QtWidgets.QLineEdit(self.groupBox_3)
        self.email.setGeometry(QtCore.QRect(460, 30, 142, 25))
        self.email.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.email.setObjectName("email")
        self.karname = QtWidgets.QLineEdit(self.groupBox_3)
        self.karname.setGeometry(QtCore.QRect(460, 60, 142, 25))
        self.karname.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.karname.setObjectName("karname")
        self.sokname = QtWidgets.QLineEdit(self.groupBox_3)
        self.sokname.setGeometry(QtCore.QRect(10, 90, 142, 25))
        self.sokname.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.sokname.setObjectName("sokname")
        self.toname = QtWidgets.QLineEdit(self.groupBox_3)
        self.toname.setGeometry(QtCore.QRect(160, 90, 441, 25))
        self.toname.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.toname.setObjectName("toname")
        self.addbtn = QtWidgets.QPushButton(self.centralwidget)
        self.addbtn.setGeometry(QtCore.QRect(100, 440, 89, 25))
        self.addbtn.setObjectName("addbtn")
        self.changebtn = QtWidgets.QPushButton(self.centralwidget)
        self.changebtn.setGeometry(QtCore.QRect(200, 440, 89, 25))
        self.changebtn.setObjectName("changebtn")
        self.delbtn = QtWidgets.QPushButton(self.centralwidget)
        self.delbtn.setGeometry(QtCore.QRect(300, 440, 89, 25))
        self.delbtn.setObjectName("delbtn")
        self.infobtn = QtWidgets.QPushButton(self.centralwidget)
        self.infobtn.setGeometry(QtCore.QRect(400, 440, 89, 25))
        self.infobtn.setObjectName("infobtn")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(784, 0, 67, 17))
        self.label.setObjectName("label")
        self.addbtn_2 = QtWidgets.QPushButton(self.centralwidget)
        self.addbtn_2.setGeometry(QtCore.QRect(0, 440, 89, 25))
        self.addbtn_2.setObjectName("addbtn_2")
        self.log = QtWidgets.QLabel(self.centralwidget)
        self.log.setGeometry(QtCore.QRect(500, 440, 351, 31))
        self.label_w = QtWidgets.QCheckBox(self.centralwidget)
        self.label_w.setGeometry(QtCore.QRect(20, 410, 151, 17))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(224, 27, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(224, 27, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.log.setPalette(palette)
        self.log.setStyleSheet("border-color: rgb(237, 51, 59);")
        self.log.setText("")
        self.intvalid = QIntValidator()
        self.log.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.log.setObjectName("log")
        self.groupBox_2.raise_()
        self.groupBox.raise_()
        self.mob2.setValidator(self.intvalid)
        self.mob2_2.setValidator(self.intvalid)
        self.telname.setValidator(self.intvalid)
        
        
        self.mob2.setLocale(QLocale(QLocale.Persian, QLocale.Iran))
        self.mob2_2.setLocale(QLocale(QLocale.Persian, QLocale.Iran))
        self.telname.setLocale(QLocale(QLocale.Persian, QLocale.Iran))
        
        
        self.groupBox_3.raise_()
        self.addbtn.raise_()
        self.changebtn.raise_()
        self.delbtn.raise_()
        self.infobtn.raise_()
        self.label.raise_()
        self.addbtn_2.raise_()
        self.log.raise_()
        self.addbtn_2.clicked.connect(self.copy)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 854, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        
        
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.addlist_name()
        self.infobtn.clicked.connect(self.info_func)
        self.retranslateUi(MainWindow)
        self.findbtn.clicked.connect(self.find)
        self.addbtn.clicked.connect(self.saveed)
        self.changebtn.clicked.connect(self.edit)
        self.delbtn.clicked.connect(self.delete)
        self.tellist.setSpacing(5)
        
        
        self.label_w.setStyleSheet('font: 10pt "Ubuntu";')
        app.processEvents()
        
        
        
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
    def addlist_name(self):
        try:
            if platform.system() == "Linux":
                user = os.getlogin()
                try:
                    os.chdir(f"/home/{user}/.contact")
                except:
                    os.mkdir(f"/home/{user}/.contact")
                    os.chdir(f"/home/{user}/.contact")
                    
            if platform.system() == "Windows":
                user = os.getlogin()
                try:
                    os.chdir(f"C:\\contact")
                except:
                    os.mkdir(f"C:\\contact")
                    os.chdir(f"C:\\contact")
                    
            
                
            files = os.listdir()
            self.tellist.clear()
            for file in files:
                self.tellist.addItem(file.strip())
                
            self.log.setText("")
            
        except:
            pass
                
    def info_func(self):
            global txt
            try:
                select = self.infolist.currentItem().text().strip()
                txt = self.infolist.currentItem().text().strip()
                txt = txt.replace("مخاطب مورد نظر شما", "")
                txt = txt.replace("هست", "")
                txt = txt.replace("\n", "")
                
                self.infolist.clear()
                
                print (txt.strip())
                information_file = open(txt.strip(), "r")
                information_text = information_file.readlines()
                for l in information_text:
                    self.infolist.addItem(l.strip())
                    
                    
                self.log.setText("")
                
            except:
                
    
                self.infolist.clear()
                info_text = self.tellist.currentItem().text()
                print (info_text)
                information_file = open(info_text, "r")
                information_text = information_file.readlines()
                for l in information_text:
                    self.infolist.addItem(l.strip())
                    
                    
                self.log.setText("")
                
                
                
                
            
            
        
        
       
    def saveed(self):
        try:
            try:
                self.name.setEnabled(True)
                if self.name.text() == "":
                    self.log.setText("نام مخاطب الزامی میباشد")
                    
                
                elif self.mob2.text() == "":
                    self.log.setText("تلفن تماس الزامی میباشد")
                    
                    
                    
                else:
                
                    name = self.name.text()
                    lastname = self.lastname.text()
                    mos = self.namemos.text()
                    number = self.telname.text()
                    mob1 = self.mob2.text()
                    mob2 = self.mob2_2.text()
                    email = self.email.text()
                    kar = self.karname.text()
                    sok = self.sokname.text()
                    to = self.toname.text()
                    
                    with open(name.strip(), "w") as f:
                        f.write(f"نام مخاطب: {name}\n\n")
                        f.write(f"نام خانوادگی: {lastname}\n\n")
                        f.write(f"نام مستعار: {mos}\n\n")
                        f.write(f"تلفن تماس: {number}\n\n")
                        f.write(f"موبایل ۱: {mob1}\n\n")
                        f.write(f"موبایل ۲: {mob2}\n\n")
                        f.write(f"آدرس الکترونیکی: {email}\n\n")
                        f.write(f"نشانی محل کار: {kar}\n\n")
                        f.write(f"نشانی محل سکونت: {sok}\n\n")
                        f.write(f"توضیحات: {to}\n\n")
                        f.close()
                        
                    name = self.name.setText("")
                    lastname = self.lastname.setText("")
                    mos = self.namemos.setText("")
                    number = self.telname.setText("")
                    mob1 = self.mob2.setText("")
                    mob2 = self.mob2_2.setText("")
                    email = self.email.setText("")
                    kar = self.karname.setText("")
                    sok = self.sokname.setText("")
                    to = self.toname.setText("")
                    
                    self.addlist_name()
                    self.log.setText("")
                    

            except:
                self.name.setEnabled(True)
                if self.name.text() == "":
                    self.log.setText("نام مخاطب الزامی میباشد")
                    
                
                elif self.mob2.text() == "":
                    self.log.setText("تلفن تماس الزامی میباشد")
                    
                    
                    
                else:
                
                    name = self.name.text()
                    lastname = self.lastname.text()
                    mos = self.namemos.text()
                    number = self.telname.text()
                    mob1 = self.mob2.text()
                    mob2 = self.mob2_2.text()
                    email = self.email.text()
                    kar = self.karname.text()
                    sok = self.sokname.text()
                    to = self.toname.text()
                    
                    with open(name.strip(), "w") as f:
                        f.write(f"name mokhatab: {name}\n\n")
                        f.write(f"name khanevadegi: {lastname}\n\n")
                        f.write(f"name mostaar: {mos}\n\n")
                        f.write(f"telephone tamas: {number}\n\n")
                        f.write(f"mobile 1: {mob1}\n\n")
                        f.write(f"mobile 2: {mob2}\n\n")
                        f.write(f"adres electroniki: {email}\n\n")
                        f.write(f"neshani mahal kar: {kar}\n\n")
                        f.write(f"neshani mahal sokoonat: {sok}\n\n")
                        f.write(f"tozihat: {to}\n\n")
                        f.close()
                        
                    name = self.name.setText("")
                    lastname = self.lastname.setText("")
                    mos = self.namemos.setText("")
                    number = self.telname.setText("")
                    mob1 = self.mob2.setText("")
                    mob2 = self.mob2_2.setText("")
                    email = self.email.setText("")
                    kar = self.karname.setText("")
                    sok = self.sokname.setText("")
                    to = self.toname.setText("")
                    
                    self.addlist_name()
                    self.log.setText("لطفا سيستم خود را به پشتيباني از زبان فارسي مجهز کنيد \nو قبل از اين کار نام را انليسي بنويسيد")    
                
        except:
            self.log.setText("لطفا سيستم خود را به پشتيباني از زبان فارسي مجهز کنيد \nو قبل از اين کار نام را انليسي بنويسيد")
    def edit(self):
        try:
            self.name.setEnabled(False)
            select = self.tellist.currentItem().text()
            global save_right
            if save_right == False:
                self.addbtn.setEnabled(False)
                self.delbtn.setEnabled(False)
                a = open(select, "r")
                text = a.readlines()
                for i in text:
                    i = i.replace("\n", "").split(":")
                    print (i)
                    if i[0] == "نام مخاطب" or i[0] == "name mokhatab" :
                        self.name.setText(i[1].strip())
                        
                    if i[0] == "نام خانوادگی" or i[0] == "name khanevadegi" :
                        self.lastname.setText(i[1].strip())
                        
                    if i[0] == "نام مستعار" or i[0] == "name mostaar" :
                        self.namemos.setText(i[1].strip())
                        
                    if i[0] == "تلفن تماس" or i[0] == "telephone tamas" :
                        self.telname.setText(i[1].strip())
                        
                    if i[0] == "موبایل ۱" or i[0] == "mobile 1" :
                        self.mob2.setText(i[1].strip())
                        
                    if i[0] == "موبایل ۲" or i[0] == "mobile 2" :
                        self.mob2_2.setText(i[1].strip())
                        
                    if i[0] == "آدرس الکترونیکی" or i[0] == "adres electroniki" :
                        self.email.setText(i[1].strip())
                        
                    if i[0] == "نشانی محل کار" or i[0] == "neshani mahal kar" :
                        self.karname.setText(i[1].strip())
                        
                    if i[0] == "نشانی محل سکونت" or i[0] == "neshani mahal sokoonat" :
                        self.sokname.setText(i[1].strip())
                        
                    if i[0] == "توضیحات" or i[0] == "tozihat" :
                        self.toname.setText(i[1].strip())
                        
                    
                        
                    save_right = True
                    self.changebtn.setText("ذخیره")

                    
                    
                    
                        
            else:
                self.changebtn.setEnabled(True)
                self.saveed()
                self.infolist.clear()
                save_right = False
                self.changebtn.setText("ویرایش")
                self.addbtn.setEnabled(True)
                self.delbtn.setEnabled(True)
                
                        
                    
                    
            
                
                
        except:
            pass
                
            
            
        
    def find(self):
        try:
            if self.label_w.isChecked() == False:
                self.infolist.clear()
                info_text = self.findname.text().strip()
                files = os.listdir()
                for file in files:
                    if info_text.strip() == file.strip():
                
                
                        self.infolist.clear()
                        info_text = self.findname.text().strip()
                        print (info_text.strip())
                        information_file = open(info_text, "r")
                        information_text = information_file.readlines()
                        for l in information_text:
                            self.infolist.addItem(l.strip())
                        
                        self.log.setText("")
                        
                    elif info_text.strip() in file.strip():
                        self.infolist.addItem(f"مخاطب مورد نظر شما {file} هست \n")
                        
                    
                        
                    else:
                        pass
                    
            else:
                self.infolist.clear()
                info_text = self.findname.text().strip()
                files = os.listdir()
                for file in files:
                    if info_text in file[0:len(info_text)]:
                        self.infolist.addItem(f"مخاطب مورد نظر شما {file} هست \n")
                        
                    elif info_text in files:
                
                
                        self.infolist.clear()
                        info_text = self.findname.text().strip()
                        print (info_text.strip())
                        information_file = open(info_text, "r")
                        information_text = information_file.readlines()
                        for l in information_text:
                            self.infolist.addItem(l.strip())
                        
                        self.log.setText("")
                        
                    else:
                        pass
        except:
            pass
            
            
    def delete(self):
        try:
            
            text = self.tellist.currentItem().text()
            self.infolist.clear()
            os.remove(text)
            self.tellist.clear()
            self.addlist_name()
        except:
            pass
        
        
             
    def copy(self):
        try:
            copy_text = self.infolist.currentItem().text()
            copy = copy_text.split(":")[1]
            app.processEvents()
            pyperclip.copy(copy)
            app.processEvents()
        except:
            pass
        
        
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "دفترچه تلفن"))
        self.groupBox.setTitle(_translate("MainWindow", "لیست مخاطبین"))
        self.groupBox_2.setToolTip(_translate("MainWindow", "جستجو مخاطب"))
        self.groupBox_2.setStatusTip(_translate("MainWindow", "جستجو"))
        self.groupBox_2.setTitle(_translate("MainWindow", "جستجو"))
        self.findname.setPlaceholderText(_translate("MainWindow", "نام"))
        self.findbtn.setText(_translate("MainWindow", "جستجو"))
        self.groupBox_3.setToolTip(_translate("MainWindow", "افزودن مخاطب"))
        self.groupBox_3.setTitle(_translate("MainWindow", "افزودن مخاطب"))
        self.name.setToolTip(_translate("MainWindow", "نام مخاطب"))
        self.name.setStatusTip(_translate("MainWindow", "نام مخاطب"))
        self.name.setPlaceholderText(_translate("MainWindow", "نام مخاطب"))
        self.lastname.setToolTip(_translate("MainWindow", "نام خانوادگی"))
        self.lastname.setStatusTip(_translate("MainWindow", "نام خانوادگی"))
        self.lastname.setPlaceholderText(_translate("MainWindow", "نام خانوادگی"))
        self.namemos.setToolTip(_translate("MainWindow", "نام مستعار"))
        self.namemos.setStatusTip(_translate("MainWindow", "نام مستعار"))
        self.namemos.setPlaceholderText(_translate("MainWindow", "نام مستعار"))
        self.telname.setToolTip(_translate("MainWindow", "تلفن تماس"))
        self.telname.setStatusTip(_translate("MainWindow", "تلفن تماس"))
        self.telname.setPlaceholderText(_translate("MainWindow", "تلفن تماس"))
        self.mob2.setToolTip(_translate("MainWindow", "موبایل ۱"))
        self.mob2.setStatusTip(_translate("MainWindow", "موبایل ۱"))
        self.mob2.setPlaceholderText(_translate("MainWindow", "موبایل ۱"))
        self.mob2_2.setToolTip(_translate("MainWindow", "موبایل ۲"))
        self.mob2_2.setStatusTip(_translate("MainWindow", "موبایل ۲"))
        self.mob2_2.setPlaceholderText(_translate("MainWindow", "موبایل ۲"))
        self.email.setToolTip(_translate("MainWindow", "آدرس الکترونیکی"))
        self.email.setStatusTip(_translate("MainWindow", "آدرس الکترونیکی"))
        self.email.setPlaceholderText(_translate("MainWindow", "آدرس الکترونیکی"))
        self.karname.setToolTip(_translate("MainWindow", "نشانی محل کار"))
        self.karname.setStatusTip(_translate("MainWindow", "نشانی محل کار"))
        self.karname.setPlaceholderText(_translate("MainWindow", "نشانی محل کار"))
        self.sokname.setToolTip(_translate("MainWindow", "نشانی محل سکونت"))
        self.sokname.setStatusTip(_translate("MainWindow", "نشانی محل سکونت"))
        self.sokname.setPlaceholderText(_translate("MainWindow", "نشانی محل سکونت"))
        self.toname.setToolTip(_translate("MainWindow", "توضیحات"))
        self.toname.setStatusTip(_translate("MainWindow", "توضیحات"))
        self.toname.setPlaceholderText(_translate("MainWindow", "توضیحات"))
        self.addbtn.setToolTip(_translate("MainWindow", "افزودن به مخاطبین"))
        self.addbtn.setStatusTip(_translate("MainWindow", "افزودن به مخاطبین"))
        self.tellist.setToolTip(_translate("MainWindow", "لیست مخاطبین"))
        self.tellist.setStatusTip(_translate("MainWindow", "لیست مخاطبین"))
        self.infolist.setToolTip(_translate("MainWindow", "اطلاعات مخاطب"))
        self.infolist.setStatusTip(_translate("MainWindow", "اطلاعات مخاطب"))
        
        self.addbtn.setText(_translate("MainWindow", "افزودن"))
        self.changebtn.setToolTip(_translate("MainWindow", "ویرایش مخاطب"))
        self.changebtn.setStatusTip(_translate("MainWindow", "ویرایش مخاطب"))
        self.changebtn.setText(_translate("MainWindow", "ویرایش"))
        self.delbtn.setToolTip(_translate("MainWindow", "حذف مخاطب"))
        self.delbtn.setStatusTip(_translate("MainWindow", "حذف مخاطب"))
        self.delbtn.setText(_translate("MainWindow", "حذف"))
        self.infobtn.setToolTip(_translate("MainWindow", "اطلاعات مخاطب انتخاب شده"))
        self.infobtn.setStatusTip(_translate("MainWindow", "اطلاعات مخاطب انتخاب شده"))
        self.infobtn.setText(_translate("MainWindow", "اطلاعات"))
        self.label.setText(_translate("MainWindow", "اطلاعات"))
        self.addbtn_2.setToolTip(_translate("MainWindow", "کپی"))
        self.addbtn_2.setStatusTip(_translate("MainWindow", "کپی"))
        self.addbtn_2.setText(_translate("MainWindow", "کپی"))
        self.label_w.setText("جستحو حروف اول")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
